name: Publish on Docker Hub and Deploy

on:
  push:
    branches: [ "main" ]
    paths:
      - 'external-api-service/**'
      - '.github/workflows/python-app.yml'
  pull_request:
    branches: [ "main" ]
    paths:
      - 'external-api-service/**'
      - '.github/workflows/python-app.yml'

jobs:
  build_and_test:
    runs-on: ubuntu-latest
    environment: Deploy
    steps:
    - uses: actions/checkout@v3
    - name: Set up Python 3.10
      uses: actions/setup-python@v3
      with:
        python-version: "3.10"
      env:
        KP_API_KEY: ${{ secrets.KP_API_KEY }}
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install flake8 pytest
        if [ -f external-api-service/requirements.txt ]; then pip install -r external-api-service/requirements.txt; fi
    - name: Lint with flake8
      run: |
        # stop the build if there are Python syntax errors or undefined names
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
    - name: Do test
      run: |
        cd external-api-service
        python -u -m unittest tests/test_find_game.py

  build_and_pub:
    # Если тесты были пройдены успешно
    needs: [build_and_test]
    runs-on: [ubuntu-latest]
    environment: Test
    env:
      LOGIN: ${{ secrets.DOCKER_LOGIN }}
      NAME: ${{ secrets.DOCKER_NAME }}
    steps:
      - name: Login to docker.io
        run:  echo ${{ secrets.DOCKER_PWD }} | docker login -u ${{ secrets.DOCKER_LOGIN }} --password-stdin
      - uses: actions/checkout@master

      - name: Build pythonimage
        run: docker build -t $LOGIN/$NAME:external-api-service external-api-service

      - name: Push image to docker.io
        run: docker push $LOGIN/$NAME:external-api-service